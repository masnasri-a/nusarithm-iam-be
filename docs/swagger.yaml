basePath: /
definitions:
  entities.Domain:
    properties:
      domain:
        type: string
      domain_id:
        type: string
      name:
        type: string
    type: object
  entities.Role:
    properties:
      created_at:
        type: string
      domain_id:
        type: string
      id:
        type: string
      role_claims:
        additionalProperties: true
        type: object
      role_name:
        type: string
      updated_at:
        type: string
    type: object
  entities.User:
    properties:
      created_at:
        type: string
      domain_id:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  handlers.AuthResponse:
    properties:
      token:
        type: string
      user:
        properties:
          domain:
            properties:
              description:
                type: string
              id:
                type: string
              name:
                type: string
            type: object
          email:
            type: string
          first_name:
            type: string
          id:
            type: string
          last_name:
            type: string
          role:
            properties:
              claims:
                additionalProperties: true
                type: object
              description:
                type: string
              id:
                type: string
              name:
                type: string
            type: object
          username:
            type: string
        type: object
    type: object
  handlers.CreateDomainRequest:
    properties:
      domain:
        type: string
      name:
        type: string
    required:
    - domain
    - name
    type: object
  handlers.CreateRoleRequest:
    properties:
      role_claims:
        additionalProperties: true
        type: object
      role_name:
        type: string
    required:
    - role_name
    type: object
  handlers.CreateUserRequest:
    properties:
      domain_id:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
      role_id:
        type: string
      username:
        type: string
    required:
    - domain_id
    - email
    - first_name
    - last_name
    - password
    - role_id
    - username
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.ResetPasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
    required:
    - new_password
    type: object
  handlers.UpdateDomainRequest:
    properties:
      domain:
        type: string
      name:
        type: string
    required:
    - domain
    - name
    type: object
  handlers.UpdateRoleRequest:
    properties:
      role_claims:
        additionalProperties: true
        type: object
      role_name:
        type: string
    required:
    - role_name
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role_id:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - role_id
    - username
    type: object
  repositories.DomainListResult:
    properties:
      domains:
        items:
          $ref: '#/definitions/entities.Domain'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  repositories.RoleListResult:
    properties:
      limit:
        type: integer
      page:
        type: integer
      roles:
        items:
          $ref: '#/definitions/entities.Role'
        type: array
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  repositories.UserListResult:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/entities.User'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API for Nusarithm IAM Backend
  title: Nusarithm IAM API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Domain ID
        in: header
        name: X-NRM-DID
        required: true
        type: string
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Get authenticated user's profile information
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - auth
  /auth/validate:
    post:
      consumes:
      - application/json
      description: Validate JWT token and return user information
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Validate JWT token
      tags:
      - auth
  /domains:
    get:
      consumes:
      - application/json
      description: Get all domains with pagination and search
      parameters:
      - description: Search term for domain name
        in: query
        name: search
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repositories.DomainListResult'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all domains
      tags:
      - domains
    post:
      consumes:
      - application/json
      description: Create a new domain
      parameters:
      - description: Domain data
        in: body
        name: domain
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateDomainRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Domain'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a domain
      tags:
      - domains
  /domains/{domainId}:
    delete:
      consumes:
      - application/json
      description: Delete domain by ID
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a domain
      tags:
      - domains
    get:
      consumes:
      - application/json
      description: Get domain by ID
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Domain'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a domain
      tags:
      - domains
    put:
      consumes:
      - application/json
      description: Update domain by ID
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      - description: Domain data
        in: body
        name: domain
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateDomainRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Domain'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a domain
      tags:
      - domains
  /domains/{domainId}/roles:
    get:
      consumes:
      - application/json
      description: Get all roles for a specific domain
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get roles by domain
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      - description: Role data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a role
      tags:
      - roles
  /domains/{domainId}/users:
    get:
      consumes:
      - application/json
      description: Get all users for a specific domain
      parameters:
      - description: Domain ID
        in: path
        name: domainId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get users by domain
      tags:
      - users
  /roles:
    get:
      consumes:
      - application/json
      description: Get roles with pagination and search
      parameters:
      - description: Domain ID to filter roles
        in: query
        name: domainId
        type: string
      - description: Search term for role name
        in: query
        name: search
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repositories.RoleListResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List roles with pagination
      tags:
      - roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a role
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a role
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a role
      tags:
      - roles
  /users:
    get:
      consumes:
      - application/json
      description: Get users with pagination and search
      parameters:
      - description: Domain ID to filter users
        in: query
        name: domainId
        type: string
      - description: Search term for username, email, first name, or last name
        in: query
        name: search
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repositories.UserListResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List users with pagination
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - users
  /users/{id}/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user password by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: New password data
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset user password
      tags:
      - users
swagger: "2.0"
